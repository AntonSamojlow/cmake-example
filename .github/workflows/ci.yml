name: ci
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-22.04
          - macos-12
        compiler:
          - llvm-14.0.0
          #- gcc 
          # TODO: add gcc support (but not for windows, as mingw is too buggy)
        build_type:
          - Release
          - Debug
          
        include:
          - os: windows-2022
            compiler: msvc

        #exclude:
        #  # mingw is too buggy to support
        #  - os: windows-2022
        #    compiler: gcc

    steps:
      - uses: actions/checkout@v3
      
      - name: test-echo
        run: echo "::debug this is a test message..."

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: false # TODO: enable cppcheck
          clangtidy: true # instead of `true`, which chooses the default version, you can pass a specific version.

        # make sure coverage is only enabled for Debug builds, since it sets -O0 to make sure coverage
        # has meaningful results
      - name: Configure CMake
        run: |
          cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -DOPT_ENABLE_COVERAGE:BOOL=${{ matrix.build_type == 'Debug' }} -DGIT_SHA:STRING=${{ github.sha }}

      - name: Build main
        run: |
          cmake --build ./build --config ${{matrix.build_type}} --target main

      - name: Build mylibrary
        run: |
          cmake --build ./build --config ${{matrix.build_type}} --target mylibrary